apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.login.service.name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
  {{- include "common.labels.standard" ( dict "customLabels" .Values.login.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: login
spec:
  type: ClusterIP
  {{- if and .Values.login.service.clusterIP (eq .Values.login.service.type "ClusterIP") }}
  clusterIP: {{ .Values.login.service.clusterIP }}
  {{- end }}
  {{- if .Values.login.service.sessionAffinity }}
  sessionAffinity: {{ .Values.login.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.login.service.sessionAffinityConfig }}
  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.login.service.sessionAffinityConfig "context" $) | nindent 4 }}
  {{- end }}
  {{- if or (eq .Values.login.service.type "LoadBalancer") (eq .Values.login.service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.login.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if and (eq .Values.login.service.type "LoadBalancer") (not (empty .Values.login.service.loadBalancerSourceRanges)) }}
  loadBalancerSourceRanges: {{- toYaml .Values.login.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if and (eq .Values.login.service.type "LoadBalancer") (not (empty .Values.login.service.loadBalancerIP)) }}
  loadBalancerIP: {{ .Values.login.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.login.service.type "LoadBalancer") .Values.login.service.loadBalancerClass }}
  loadBalancerClass: {{ .Values.login.service.loadBalancerClass }}
  {{- end }}
  ports:
    {{- if .Values.login.service.ssh.port }}
    - name: ssh
      port: {{ .Values.login.service.ssh.port }}
      targetPort: {{ .Values.login.service.ssh.targetPort }}
      {{- if and (or (eq .Values.login.service.type "NodePort") (eq .Values.login.service.type "LoadBalancer")) (not (empty .Values.login.service.ssh.nodePort)) }}
      nodePort: {{ .Values.login.service.ssh.nodePort }}
      {{- end }}
    {{- end }}
    {{- if .Values.login.service.extraPorts }}
    {{- include "common.tplvalues.render" (dict "value" .Values.login.service.extraPorts "context" $) | nindent 4 }}
    {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.login.podLabels .Values.login.commonLabels ) "context" . ) }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: login
