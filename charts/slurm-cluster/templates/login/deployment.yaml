apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "slurm.fullname" . }}-{{ .Values.login.name }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.login.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: login
  {{- if .Values.login.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.login.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.login.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if .Values.login.updateStrategy }}
  strategy: {{- toYaml .Values.login.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.login.podLabels .Values.login.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: login
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: login
      annotations:
        {{- if .Values.login.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.login.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "slurm.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "slurm.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.login.automountServiceAccountToken }}
      shareProcessNamespace: true
      {{- if .Values.login.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.login.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.login.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.login.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.login.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.login.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.login.nodeAffinityPreset.type "key" .Values.login.nodeAffinityPreset.key "values" .Values.login.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      hostNetwork: {{ .Values.login.hostNetwork }}
      {{- if .Values.login.dnsPolicy  }}
      dnsPolicy: {{ .Values.login.dnsPolicy }}
      {{- end }}
      {{- if .Values.login.dnsConfig }}
      dnsConfig: {{- include "common.tplvalues.render" (dict "value" .Values.login.dnsConfig "context" $) | nindent 8 }}
      {{- else }}
      dnsConfig:
        searches:
          - {{ .Release.Name }}-{{ .Values.slurmctld.service.name }}.{{ .Release.Namespace }}.svc.cluster.local
          - {{ .Release.Name }}-{{ .Values.slurmdCPU.service.name }}.{{ .Release.Namespace }}.svc.cluster.local
          - {{ .Release.Name }}-{{ .Values.slurmdGPU.service.name }}.{{ .Release.Namespace }}.svc.cluster.local
          - {{ .Release.Name }}-{{ .Values.slurmdbd.service.name }}.{{ .Release.Namespace }}.svc.cluster.local
      {{- end }}
      hostIPC: {{ .Values.login.hostIPC }}
      {{- if .Values.login.priorityClassName }}
      priorityClassName: {{ .Values.login.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.login.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.login.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.login.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.login.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.login.schedulerName }}
      schedulerName: {{ .Values.login.schedulerName | quote }}
      {{- end }}
      {{- if .Values.login.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.login.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.login.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.login.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.login.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.login.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        - name: init-permission
          {{- if and .Values.image.mirror.registry (ne .Values.image.mirror.registry "") }}
          image: {{ .Values.image.mirror.registry }}/docker.io/library/busybox:1.37.0-glibc
          {{- else }}
          image: m.daocloud.io/docker.io/library/busybox:1.37.0-glibc
          {{- end }}
          command: ["sh", "-c", "chmod 755 /run/munge && chown 1108:1108 /run/munge"]
          volumeMounts:
            - name: munge-socket-file
              mountPath: /run/munge
      containers:
        - name: munged
          image: "{{ .Values.munged.image.registry }}/{{ .Values.munged.image.repository }}:{{ .Values.munged.image.tag }}"
          imagePullPolicy: {{ .Values.munged.image.pullPolicy }}
          {{- if .Values.munged.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.munged.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.munged.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.munged.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.munged.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.munged.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.munged.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.munged.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.munged.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.munged.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: munge-socket-file
              mountPath: /run/munge
            {{- if .Values.munged.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.munged.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        - name: login
          image: "{{ .Values.login.image.registry }}/{{ .Values.login.image.repository }}:{{ .Values.login.image.tag }}"
          imagePullPolicy: {{ .Values.login.image.pullPolicy }}
          {{- if .Values.login.containerSecurityContext }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.login.containerSecurityContext "context" $) | nindent 12 }}
          {{- else }}
          securityContext:
            privileged: true
          {{- end }}
          {{- if .Values.login.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.login.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.login.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.login.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.login.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.login.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.login.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.login.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.login.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.login.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.login.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.login.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.login.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.login.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.login.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.login.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: ssh
              containerPort: {{ .Values.login.service.ssh.port }}
            {{- if .Values.login.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.login.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.login.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.login.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.login.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.login.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: ssh
          {{- end }}
          {{- if .Values.login.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.login.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.login.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.login.readinessProbe "enabled" "path") "context" $) | nindent 12 }}
            tcpSocket:
              port: ssh
          {{- end }}
          {{- if .Values.login.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.login.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.login.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.login.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: ssh
          {{- end }}
          {{- if .Values.login.resources }}
          resources: {{- toYaml .Values.login.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: ssh-private-key
              mountPath: /root/.ssh/id_rsa
              subPath: id_rsa
            - name: ssh-public-key
              mountPath: /root/.ssh/id_rsa.pub
              subPath: id_rsa.pub
            - name: ssh-ext-keys
              mountPath: /root/.ssh/authorized_keys
              subPath: authorized_keys
            - name: shared-storage
              mountPath: /data
            - name: slurm-conf-file
              mountPath: /etc/slurm/slurm.conf
              subPath: slurm.conf
            - name: cgroup-conf-file
              mountPath: /etc/slurm/cgroup.conf
              subPath: cgroup.conf
            - name: munge-socket-file
              mountPath: /run/munge
            {{- if .Values.login.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.login.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: ssh-private-key
          secret:
            secretName: {{ .Values.auth.ssh.secret.name }}
            items:
              - key: {{ .Values.auth.ssh.secret.keys.private }}
                path: {{ .Values.auth.ssh.secret.keys.private }}
                mode: 256
        - name: ssh-public-key
          secret:
            secretName: {{ .Values.auth.ssh.secret.name }}
            items:
              - key: {{ .Values.auth.ssh.secret.keys.public }}
                path: {{ .Values.auth.ssh.secret.keys.public }}
                mode: 444
        - name: ssh-ext-keys
          configMap:
            name: {{ .Values.auth.ssh.configmap.name }}
        - name: shared-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.shared.name }}
        - name: slurm-conf-file
          configMap:
            name: {{ include "slurm.fullname" . }}-slurm-conf
        - name: cgroup-conf-file
          configMap:
            name: {{ include "slurm.fullname" . }}-cgroup-conf
        - name: munge-socket-file
          emptyDir: {}
        {{- if .Values.login.extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.login.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
